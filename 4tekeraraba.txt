#include <SoftwareSerial.h>

// --- Bluetooth ---
SoftwareSerial BT(2, 3);  // RX, TX

// --- L298N motor sürücü pinleri ---
const int ENA = 5;   // Sol motor PWM
const int IN1 = 8;
const int IN2 = 9;

const int ENB = 6;   // Sağ motor PWM
const int IN3 = 10;
const int IN4 = 11;

// --- Hız değişkeni ---
int speedVal = 200;

void setup() {
  // Motor pinlerini çıkış yap
  pinMode(ENA, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);

  pinMode(ENB, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  // Seri portlar
  Serial.begin(9600);
  BT.begin(9600);

  Serial.println("Bluetooth araba hazir!");
}

// --- Hareket Fonksiyonları ---
void forward(int spd) {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  analogWrite(ENA, spd);
  analogWrite(ENB, spd);
}

void backward(int spd) {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  analogWrite(ENA, spd);
  analogWrite(ENB, spd);
}

void left(int spd) {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  analogWrite(ENA, spd);
  analogWrite(ENB, spd);
}

void right(int spd) {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  analogWrite(ENA, spd);
  analogWrite(ENB, spd);
}

void stopMotors() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
  analogWrite(ENA, 0);
  analogWrite(ENB, 0);
}

void loop() {
  if (BT.available()) {
    char c = BT.read();

    // Eğer CR veya LF (Enter karakterleri) geldiyse atla
    if (c == '\r' || c == '\n') return;

    Serial.print("Gelen komut: ");
    Serial.println(c);

    switch (c) {
      case 'F': forward(speedVal); break;   // ileri
      case 'B': backward(speedVal); break;  // geri
      case 'L': left(speedVal); break;      // sol
      case 'R': right(speedVal); break;     // sağ
      case 'S': stopMotors(); break;        // dur
      default: stopMotors(); break;
    }
  }
}
